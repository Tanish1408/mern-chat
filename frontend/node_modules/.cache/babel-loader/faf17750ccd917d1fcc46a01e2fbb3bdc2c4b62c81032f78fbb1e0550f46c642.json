{"ast":null,"code":"import{useEffect,useState}from\"react\";import API from\"../utils/api\";import{getSocket}from\"../utils/socket\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function Chat(_ref){let{recipient}=_ref;const[messages,setMessages]=useState([]);const[text,setText]=useState(\"\");useEffect(()=>{const fetchMessages=async()=>{const res=await API.get(\"/messages/\".concat(recipient._id));setMessages(res.data);};fetchMessages();const socket=getSocket();socket===null||socket===void 0?void 0:socket.on(\"private_message\",msg=>{if(msg.sender===recipient._id)setMessages(prev=>[...prev,msg]);});return()=>{socket===null||socket===void 0?void 0:socket.off(\"private_message\");};},[recipient]);const sendMessage=async()=>{const socket=getSocket();if(!text.trim())return;const msg={sender:\"me\",content:text};setMessages(prev=>[...prev,msg]);socket===null||socket===void 0?void 0:socket.emit(\"private_message\",{recipient:recipient._id,content:text});setText(\"\");await API.post(\"/messages\",{recipient:recipient._id,content:text});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Chat with \",recipient.username]}),/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map((m,i)=>/*#__PURE__*/_jsx(\"div\",{className:m.sender===\"me\"?\"msg-me\":\"msg-other\",children:m.content},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{value:text,onChange:e=>setText(e.target.value),placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});}","map":{"version":3,"names":["useEffect","useState","API","getSocket","jsxs","_jsxs","jsx","_jsx","Chat","_ref","recipient","messages","setMessages","text","setText","fetchMessages","res","get","concat","_id","data","socket","on","msg","sender","prev","off","sendMessage","trim","content","emit","post","className","children","username","map","m","i","value","onChange","e","target","placeholder","onClick"],"sources":["/Users/tanishtyagi/Desktop/mern-chat/frontend/src/components/Chat.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport API from \"../utils/api\";\nimport { getSocket } from \"../utils/socket\";\n\ninterface User { _id: string; username: string; }\ninterface Message { sender: string; content: string; }\n\nexport default function Chat({ recipient }: { recipient: User }) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const res = await API.get(`/messages/${recipient._id}`);\n      setMessages(res.data);\n    };\n    fetchMessages();\n\n    const socket = getSocket();\n    socket?.on(\"private_message\", (msg: Message) => {\n      if (msg.sender === recipient._id) setMessages(prev => [...prev, msg]);\n    });\n\n    return () => {\n      socket?.off(\"private_message\");\n    };\n  }, [recipient]);\n\n  const sendMessage = async () => {\n    const socket = getSocket();\n    if (!text.trim()) return;\n\n    const msg = { sender: \"me\", content: text };\n    setMessages(prev => [...prev, msg]);\n    socket?.emit(\"private_message\", { recipient: recipient._id, content: text });\n    setText(\"\");\n\n    await API.post(\"/messages\", { recipient: recipient._id, content: text });\n  };\n\n  return (\n    <div className=\"chat\">\n      <h3>Chat with {recipient.username}</h3>\n      <div className=\"messages\">\n        {messages.map((m, i) => (\n          <div key={i} className={m.sender === \"me\" ? \"msg-me\" : \"msg-other\"}>\n            {m.content}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-box\">\n        <input value={text} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}