{"ast":null,"code":"import{useState}from\"react\";import API from\"../utils/api\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Register(){const navigate=useNavigate();const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const handleSubmit=async e=>{e.preventDefault();try{await API.post(\"/auth/register\",{username,password});alert(\"Registered successfully\");navigate(\"/login\");}catch(err){var _err$response,_err$response$data;alert(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||\"Registration failed\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]})]});}","map":{"version":3,"names":["useState","API","useNavigate","jsx","_jsx","jsxs","_jsxs","Register","navigate","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","post","alert","err","_err$response","_err$response$data","response","data","error","className","children","onSubmit","placeholder","value","onChange","target","type"],"sources":["/Users/tanishtyagi/Desktop/mern-chat/frontend/src/components/Register.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport API from \"../utils/api\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      await API.post(\"/auth/register\", { username, password });\n      alert(\"Registered successfully\");\n      navigate(\"/login\");\n    } catch (err: any) {\n      alert(err.response?.data?.error || \"Registration failed\");\n    }\n  };\n\n  return (\n    <div className=\"auth-form\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,GAAG,KAAM,cAAc,CAC9B,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACjC,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACO,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,CAAM,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAd,GAAG,CAACe,IAAI,CAAC,gBAAgB,CAAE,CAAEP,QAAQ,CAAEE,QAAS,CAAC,CAAC,CACxDM,KAAK,CAAC,yBAAyB,CAAC,CAChCT,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAE,MAAOU,GAAQ,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACjBH,KAAK,CAAC,EAAAE,aAAA,CAAAD,GAAG,CAACG,QAAQ,UAAAF,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcG,IAAI,UAAAF,kBAAA,iBAAlBA,kBAAA,CAAoBG,KAAK,GAAI,qBAAqB,CAAC,CAC3D,CACF,CAAC,CAED,mBACEjB,KAAA,QAAKkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrB,IAAA,OAAAqB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBnB,KAAA,SAAMoB,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eAC3BrB,IAAA,UAAOuB,WAAW,CAAC,UAAU,CAACC,KAAK,CAAEnB,QAAS,CAACoB,QAAQ,CAAEf,CAAC,EAAIJ,WAAW,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAC7FxB,IAAA,UAAO2B,IAAI,CAAC,UAAU,CAACJ,WAAW,CAAC,UAAU,CAACC,KAAK,CAAEjB,QAAS,CAACkB,QAAQ,CAAEf,CAAC,EAAIF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAC7GxB,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAN,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnC,CAAC,EACJ,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}